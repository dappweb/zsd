"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8359],{8359:function(e,t,n){n.d(t,{upload:function(){return u}});var i=n(66350),r=n(49859),a=n(25520),l=n(39347);function o(e){return globalThis.File&&e instanceof File}function f(e){return!!(e&&(0,a.L)(e,["data","name"]))&&!!("string"==typeof e.name&&("string"==typeof e.data||(0,l.lq)(e.data)))}function s(e){return o(e)||(0,l.lq)(e)||f(e)}async function u(e){let t;if(0===e.files.length)return null;if(e.files.map(e=>s(e)||"string"==typeof e).every(e=>!!e))t=e.files;else{let n=e.files,i=function e(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];if(s(t))return n.push(t),n;if("object"==typeof t){if(!t)return n;if(Array.isArray(t))for(let i of t)e(i,n);else Object.keys(t).map(i=>e(t[i],n))}return n}(n=function e(t){return"string"==typeof t?function(e){if(e.includes("/ipfs/")){let t=e.split("/ipfs/")[1];return"ipfs://".concat(t)}return e}(t):"object"==typeof t?!t||s(t)?t:Array.isArray(t)?t.map(t=>e(t)):Object.fromEntries(Object.entries(t).map(t=>{let[n,i]=t;return[n,e(i)]})):t}(n));if(i.length){let t=await u({...e,files:i});n=function e(t,n){if(s(t)){if(n.length)return n.shift();console.warn("Not enough URIs to replace all files in object.")}return"object"==typeof t&&t?Array.isArray(t)?t.map(t=>e(t,n)):Object.fromEntries(Object.entries(t).map(t=>{let[i,r]=t;return[i,e(r,n)]})):t}(n,Array.isArray(t)?t:[t])}t=n.map(e=>"string"==typeof e?e:(0,r.P)(e))}let{fileNames:a,form:c}=function(e,t,n){let i=new Map,r=[];for(let a=0;a<t.length;a++){let s=t[a],u="",c=s;if(o(s)){if(null==n?void 0:n.rewriteFileNames){let e="";if(s.name){let t=s.name.lastIndexOf(".");t>-1&&(e=s.name.substring(t))}u="".concat(a+n.rewriteFileNames.fileStartNumber).concat(e)}else u="".concat(s.name)}else f(s)?(c=s.data,u=(null==n?void 0:n.rewriteFileNames)?"".concat(a+n.rewriteFileNames.fileStartNumber):"".concat(s.name)):u=(null==n?void 0:n.rewriteFileNames)?"".concat(a+n.rewriteFileNames.fileStartNumber):"".concat(a);let p=(null==n?void 0:n.uploadWithoutDirectory)?"files":"files/".concat(u);if(i.has(u)){if(function(e,t){if(o(e)&&o(t)){if(e.name===t.name&&e.lastModified===t.lastModified&&e.size===t.size)return!0}else if((0,l.lq)(e)&&(0,l.lq)(t))return(0,l.AY)(e,t);else if(f(e)&&f(t)&&e.name===t.name){if("string"==typeof e.data&&"string"==typeof t.data)return e.data===t.data;if((0,l.lq)(e.data)&&(0,l.lq)(t.data))return(0,l.AY)(e.data,t.data)}return!1}(i.get(u),s)){r.push(u);continue}throw Error("[DUPLICATE_FILE_NAME_ERROR] File name ".concat(u," was passed for more than one different file."))}i.set(u,s),r.push(u),e.append("file",new Blob([c]),p)}let a={name:"Storage SDK",keyvalues:{...null==n?void 0:n.metadata}};return e.append("pinataMetadata",JSON.stringify(a)),(null==n?void 0:n.uploadWithoutDirectory)&&e.append("pinataOptions",JSON.stringify({wrapWithDirectory:!1})),{form:e,fileNames:r.map(e=>encodeURIComponent(e))}}(new FormData,t,e),p=(0,i.t)();if("browser"===p||"node"===p){let{uploadBatch:t}=await n.e(33446).then(n.bind(n,33446)),i=await t(e.client,c,a,e);return 1===e.files.length?i[0]:i}throw Error("Please, use the uploadMobile function in mobile environments.")}},25520:function(e,t,n){n.d(t,{L:function(){return i}});function i(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];return"object"==typeof e&&null!==e&&t.every(t=>t in e)}}}]);